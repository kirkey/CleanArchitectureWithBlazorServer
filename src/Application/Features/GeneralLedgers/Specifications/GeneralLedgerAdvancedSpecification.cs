//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-08-04
// Advanced filter and specification for GeneralLedger queries.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings

namespace CleanArchitecture.Blazor.Application.Features.GeneralLedgers.Specifications;

public enum GeneralLedgerListView
{
    [Description("All")]
    All,
    [Description("Debit Only")]
    DebitOnly,
    [Description("Credit Only")]
    CreditOnly,
    [Description("High Amount")]
    HighAmount
}

public class GeneralLedgerAdvancedFilter : PaginationFilter
{
    public GeneralLedgerListView ListView { get; set; } = GeneralLedgerListView.All;
    public string? EntryID { get; set; }
    public string? AccountID { get; set; }
    public decimal? MinDebit { get; set; }
    public decimal? MaxDebit { get; set; }
    public decimal? MinCredit { get; set; }
    public decimal? MaxCredit { get; set; }
    public DateTime? StartDate { get; set; }
    public DateTime? EndDate { get; set; }
}

public class GeneralLedgerAdvancedSpecification : Specification<GeneralLedger>
{
    public GeneralLedgerAdvancedSpecification(GeneralLedgerAdvancedFilter filter)
    {
        Query.Where(q => q.EntryId != null)
             .Where(filter.Keyword, !string.IsNullOrEmpty(filter.Keyword))
             .Where(q => q.EntryId == filter.EntryID, !string.IsNullOrEmpty(filter.EntryID))
             .Where(q => q.AccountId == filter.AccountID, !string.IsNullOrEmpty(filter.AccountID))
             .Where(q => q.Debit >= filter.MinDebit, filter.MinDebit.HasValue)
             .Where(q => q.Debit <= filter.MaxDebit, filter.MaxDebit.HasValue)
             .Where(q => q.Credit >= filter.MinCredit, filter.MinCredit.HasValue)
             .Where(q => q.Credit <= filter.MaxCredit, filter.MaxCredit.HasValue)
             .Where(q => q.Created >= filter.StartDate, filter.StartDate.HasValue)
             .Where(q => q.Created <= filter.EndDate, filter.EndDate.HasValue);

        switch (filter.ListView)
        {
            case GeneralLedgerListView.All:
                break;
            case GeneralLedgerListView.DebitOnly:
                Query.Where(q => q.Debit > 0 && q.Credit == 0);
                break;
            case GeneralLedgerListView.CreditOnly:
                Query.Where(q => q.Credit > 0 && q.Debit == 0);
                break;
            case GeneralLedgerListView.HighAmount:
                Query.Where(q => q.Debit > 1000 || q.Credit > 1000);
                break;
        }
    }
}
