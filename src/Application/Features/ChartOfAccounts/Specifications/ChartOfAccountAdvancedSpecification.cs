//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-08-04
// Advanced filter for ChartOfAccount queries.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
#nullable disable warnings

namespace CleanArchitecture.Blazor.Application.Features.ChartOfAccounts.Specifications;

public enum ChartOfAccountListView
{
    [Description("All")]
    All,
    [Description("Active")]
    Active,
    [Description("Inactive")]
    Inactive
}

public class ChartOfAccountAdvancedFilter : PaginationFilter
{
    public ChartOfAccountListView ListView { get; set; } = ChartOfAccountListView.All;
    public AccountType? AccountType { get; set; }
    public bool? IsActive { get; set; }
}

public class ChartOfAccountAdvancedSpecification : Specification<ChartOfAccount>
{
    public ChartOfAccountAdvancedSpecification(ChartOfAccountAdvancedFilter filter)
    {
        var today = DateTime.Now.ToUniversalTime().Date;
        var todayEnd = DateTime.Now.ToUniversalTime().Date.AddDays(1).AddSeconds(-1);

        Query.Where(q => q.AccountName != null)
             .Where(filter.Keyword, !string.IsNullOrEmpty(filter.Keyword))
             .Where(q => q.AccountType == filter.AccountType, filter.AccountType.HasValue)
             .Where(q => q.IsActive == filter.IsActive, filter.IsActive.HasValue);

        switch (filter.ListView)
        {
            case ChartOfAccountListView.All:
                break;
            case ChartOfAccountListView.Active:
                Query.Where(q => q.IsActive == true);
                break;
            case ChartOfAccountListView.Inactive:
                Query.Where(q => q.IsActive == false);
                break;
        }
    }
}
