//------------------------------------------------------------------------------
// <auto-generated>
// CleanArchitecture.Blazor - MIT Licensed.
// Author: neozhu
// Created/Modified: 2025-08-04
// Handles ChartOfAccountUpdatedEvent and ChartOfAccountDeletedEvent.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CleanArchitecture.Blazor.Application.Features.ChartOfAccounts.EventHandlers;

public class ChartOfAccountCreatedEventHandler : INotificationHandler<ChartOfAccountCreatedEvent>
{
    private readonly ILogger<ChartOfAccountCreatedEventHandler> _logger;

    public ChartOfAccountCreatedEventHandler(
        ILogger<ChartOfAccountCreatedEventHandler> logger
    )
    {
        _logger = logger;
    }
    
    public Task Handle(ChartOfAccountCreatedEvent notification, CancellationToken cancellationToken)
    {
        _logger.LogInformation("Handled domain event '{EventType}' with notification: {@Notification} ", notification.GetType().Name, notification);
        return Task.CompletedTask;
    }
}


public class ChartOfAccountUpdatedEventHandler : INotificationHandler<ChartOfAccountUpdatedEvent>
{
    private readonly ILogger<ChartOfAccountUpdatedEventHandler> _logger;

    public ChartOfAccountUpdatedEventHandler(
        ILogger<ChartOfAccountUpdatedEventHandler> logger
        )
    {
        _logger = logger;
    }
    
    public Task Handle(ChartOfAccountUpdatedEvent notification, CancellationToken cancellationToken)
    {
        _logger.LogInformation("Handled domain event '{EventType}' with notification: {@Notification} ", notification.GetType().Name, notification);
        return Task.CompletedTask;
    }
}

public class ChartOfAccountDeletedEventHandler : INotificationHandler<ChartOfAccountDeletedEvent>
{
    private readonly ILogger<ChartOfAccountDeletedEventHandler> _logger;

    public ChartOfAccountDeletedEventHandler(
        ILogger<ChartOfAccountDeletedEventHandler> logger
        )
    {
        _logger = logger;
    }
    
    public Task Handle(ChartOfAccountDeletedEvent notification, CancellationToken cancellationToken)
    {
        _logger.LogInformation("Handled domain event '{EventType}' with notification: {@Notification} ", notification.GetType().Name, notification);
        return Task.CompletedTask;
    }
}
