<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <base href="/"/>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet"/>
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet"/>
    <link href="css/app.css" rel="stylesheet"/>
    <HeadOutlet @rendermode="RenderModeForPage"/>
    <!-- SEO Meta Tags -->
    <meta name="description" content="Blazor Server project template with Clean Architecture principles. A demo showcasing fast and easy web app creation using .NET Blazor." />
    <meta name="keywords" content="Blazor Server Project Template, Clean Architecture, Demo, .NET, Web Applications" />
    <meta name="author" content="neo.js.cn@gmail.com" />
    <meta name="robots" content="index, follow" />
    <meta property="og:title" content="Clean Architecture With Blazor Server - Demo" />
    <meta property="og:description" content="Blazor Server project template with Clean Architecture principles. A demo showcasing fast and easy web app creation using .NET Blazor." />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://www.blazorserver.com" />
    <meta property="og:image" content="https://avatars.githubusercontent.com/u/1549611?s=48&v=4" />
    <title>Clean Architecture With Blazor Server - Demo</title>
</head>

<body>
    <Routes @rendermode="RenderModeForPage"/>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-X1CWBPHV76"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'G-X1CWBPHV76');
    </script>
</body>

</html>

@code {
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments("/pages/authentication")
        ? null
        : new InteractiveServerRenderMode(false);

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

}